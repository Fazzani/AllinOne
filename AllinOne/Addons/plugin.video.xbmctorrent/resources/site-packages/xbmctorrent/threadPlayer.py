import xbmc
import xbmcgui
import time
from xbmctorrent import plugin
from threading import Thread
import xbmcswift2 
from CustomPlayer import CustomPlayer

class threadPlayer(Thread):
  
  def __init__(self, sleeptime, func, item, isSaison, taskid, fb):
      plugin.log.debug('********* init thread Player')
      plugin.log.debug('********* item %s' % item)
      self.sleeptime = sleeptime
      self.func = func 
      self.taskid = taskid 
      self.fb = fb 
      self.item = item
      self._isSaison = isSaison
      self.item['info_type'] = 'video'
      self._listitem = xbmcswift2.ListItem.from_dict(**item).as_xbmc_listitem()
      self.player = CustomPlayer(item=self.item , fb = self.fb, taskid = self.taskid)
      Thread.__init__(self)
      #self.setDaemon(True)
  
  def run(self):
      plugin.log.debug('********* run thread Player ')
      while(not xbmc.abortRequested and not self.player.isPlaying()):
        try:
          self.player = CustomPlayer(item=self.item , fb = self.fb, taskid = self.taskid)
          plugin.log.debug("********* str Item %s" % str(self.item))
          self.player.play(item = self.item['path'], listitem = self._listitem)
          if self.player.isPlaying():
                self.player.showOverlay()
          plugin.log.debug('********* func called its time to sleep ')
          xbmc.sleep(self.sleeptime)
        except Exception as e:
          plugin.log.error(str(e))
      while(self.player.isPlaying()):
          xbmc.sleep(1000)

      plugin.log.debug('********* showOverlay')
      self.func(self.item, self._isSaison)

  