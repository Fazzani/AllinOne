'''
Created on Feb 17, 2010

@author: joseph ssenyange http://zenu.wordpress.com
'''
import sqlite3, sys, os, fnmatch

def FindFiles(root, patterns='*', single_level=False, yield_folders=False):
    patterns = patterns.split(';')
    for path, subdirs, files in os.walk(root):
        if yield_folders:
            files.extend(subdirs)
        files.sort( )
        for name in files:
            for pattern in patterns:
                if fnmatch.fnmatch(name, pattern):
                    yield os.path.join(path, name)
                    break
        if single_level:
            break

def GetMovieCategory(filePath):
    categories = ("Documentaries","Movies","Series")
    movieCategory="Other"
    for category  in categories:
        if(filePath.lower().rfind(category.lower())>=0):
            movieCategory = category
            break
    return movieCategory

if(len(sys.argv) < 3):
    print (""" Usage
            pathToXbmcDataFile Folder1 Folder2 ...
            The path to the xbmc database file
            e.g ~/.xbmc/userdata/Database/MyVideos34.db 
            Folder are the paths to the folders with the movies
            """)
    exit()

if(not os.path.isfile(sys.argv[1]) ):
    print ("Path does not point to a file.")
    exit();


connection = sqlite3.connect(sys.argv[1])
cursor = connection.cursor( )


moviesql = "insert into movie(idMovie,c00,c15,idFile) values(?, ?, ?, ?)"
filesql="insert into files(idFile, idPath, strFilename) values(?, ?, ?)"
pathsql="insert into path(idPath, strPath) values(?, ?)"


cursor.execute("select coalesce(max(idPath),0) as pathId from path")
pathId =  cursor.fetchone()[0]
cursor.execute("select coalesce(max(idFile),0) as fileId from files")
fileId = cursor.fetchone()[0]
cursor.execute("select coalesce(max(idMovie),0) as movieId from movie")
movieId = cursor.fetchone()[0]

currentPath="";

for movieFolder in (sys.argv[2:]):
    for movie in FindFiles(movieFolder,("*.avi;*.iso;*.mkv;*.vob;*.mp4;*.rmvb;*.mpg;*.dat;*.wmv")):
        if(os.path.isfile(movie)):
            movieDir = os.path.dirname(movie)
            movieFileName = os.path.basename(movie)
            movieName =  movieFileName[:movieFileName.rfind(".")]            
            movieCategory = GetMovieCategory(movie)
            if(movieDir!=currentPath):
                pathId = pathId + 1
                cursor.execute(pathsql , (pathId,movieDir))
                currentPath = movieDir
            fileId = fileId + 1
            cursor.execute(filesql , (fileId,pathId,movieFileName))
            movieId = movieId + 1
            cursor.execute(moviesql , (movieId,movieName,movieCategory,fileId))
           
connection.commit()
cursor.close()
