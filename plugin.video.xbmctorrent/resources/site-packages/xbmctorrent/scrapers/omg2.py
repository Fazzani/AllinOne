import os
import re
import xbmc
import json
from xbmctorrent import plugin
from xbmctorrent.scrapers import scraper
from xbmctorrent.ga import tracked
from xbmctorrent.caching import cached_route
from xbmctorrent.utils import ensure_fanart
from xbmctorrent.utils import ensure_play_path
from xbmctorrent.utils import ensure_color
from xbmctorrent.utils import tvShowSaisonPathExtract
from xbmctorrent.library import library_context
from xbmcswift2.logger import log
import sys

reload(sys)  
sys.setdefaultencoding('utf8')
plugin.url_for("play", uri='tmp')
BASE_URL = plugin.get_setting("base_omg")
HEADERS = {
    "Referer": BASE_URL,
    "User-Agent": "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36",
    "Cookie":"ot_affiche=value"
}
SCRAPER_SERVER_URL = "http://xbmcplugindata.azurewebsites.net"
SCRAPER_SERVER_URL = "http://localhost:1307"
SCRAPER_SERVER_URL = "http://localhost/XBMCPluginData"
SORT_DATE = "trie-date"
SORT_NOM = "trie-nom"
SORT_TELECHARGEMENT = "trie-telechargement"
SORT_SEEDS = "trie-seeds"
SORT_LEECHS = "trie-leechs"
SORT_CATEGORIE = "trie-categorie"

SORT_DIRECTION_ASC = "asc"
SORT_DIRECTION_DESC = "desc"

ACTION_SEARCH = "recherche"
ACTION_FILMS = "films"
ACTION_SERIES_EPISODES = "series-episodes"
ACTION_SERIES = "series"
QUERY_CATEGORIE = "QUERY_CATEGORIE"
TYPE_F = "films"
TYPE_S = "series"
TYPE_A = "All"
NO_CAT = "NO_CAT"

@scraper("OmgTorrent - Torrent Francais", "%s/img/logo.png" % BASE_URL)
@plugin.route("/omg2")
@ensure_fanart
@tracked
def omg2_index():
    return [{"label": "Recherche ...", "path": plugin.url_for("omg2_search")},
		{"label": "Films", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=TYPE_F, page=1, orderby=2, order=1, format="0")},
		{"label": "    Categories ...", "path": plugin.url_for("omg2_movie_index")},
		{"label": "Series", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=ACTION_SERIES, page=1, orderby=2, order=1, format="0")},
		{"label": "    Categories ...", "path": plugin.url_for("omg2_serie_index")},
		{"label": "TOP 30 Films", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=TYPE_F, page=1, orderby = 0, order=1, format="0")},
		{"label": "Derniers", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=TYPE_A, page=1, orderby = 2, order=1, format="0")},
		{"label": "    Series", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=ACTION_SERIES_EPISODES, page=1, orderby = 2, order=1, format="0")},
		{"label": "    Films", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "    Films 720p", "path": plugin.url_for("omg2_listAll",cat=NO_CAT, type=TYPE_F, page=1, orderby = 2, order=1, format="6")},
		{"label": "    Films 1080p", "path": plugin.url_for("omg2_listAll", cat=NO_CAT, type=TYPE_F, page=1, orderby = 2, order=1, format="5")}]

@plugin.route("/omg2/movie/index")
@ensure_fanart
@tracked
def omg2_movie_index():
	return [{"label": "Action", "path": plugin.url_for("omg2_listAll",  cat="action", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Arts Martiaux", "path": plugin.url_for("omg2_listAll",   cat="arts-martiaux", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Thriller", "path": plugin.url_for("omg2_listAll",   cat="thriller", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Policier", "path": plugin.url_for("omg2_listAll",   cat="policier", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Epouvante-horreur", "path": plugin.url_for("omg2_listAll",   cat="epouvante-horreur", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Science fiction", "path": plugin.url_for("omg2_listAll",   cat="science fiction", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Aventure", "path": plugin.url_for("omg2_listAll",    cat="aventure", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Comedie", "path": plugin.url_for("omg2_listAll",   cat="comedie", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Fantastique", "path": plugin.url_for("omg2_listAll",   cat="fantastique", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Animation", "path": plugin.url_for("omg2_listAll",   cat="animation", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Espionnage", "path": plugin.url_for("omg2_listAll",   cat="espionnage", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Comedie dramatique".encode("utf-8"), "path": plugin.url_for("omg2_listAll",   cat="comedie-dramatique", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Biopic", "path": plugin.url_for("omg2_listAll",   cat="Biopic", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Comedie musicale", "path": plugin.url_for("omg2_listAll",   cat="comedie-musicale", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Documentaire", "path": plugin.url_for("omg2_listAll",   cat="documentaire", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Drames", "path": plugin.url_for("omg2_listAll",    cat="drames", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Famille", "path": plugin.url_for("omg2_listAll",   cat="famille", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Guerre", "path": plugin.url_for("omg2_listAll",   cat="guerre", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Historique", "path": plugin.url_for("omg2_listAll",   cat="historique", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Peplum", "path": plugin.url_for("omg2_listAll",   cat="peplum", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Romance", "path": plugin.url_for("omg2_listAll",   cat="romance", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Spectacle", "path": plugin.url_for("omg2_listAll",   cat="spectacle", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Western", "path": plugin.url_for("omg2_listAll",   cat="western", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},
		{"label": "Musical", "path": plugin.url_for("omg2_listAll",   cat="musical", type=TYPE_F, page=1, orderby = 2, order=1, format="0")},]

@plugin.route("/omg2/serie/index")
@ensure_fanart
@tracked
def omg2_serie_index():
	return [{"label": "0, A, B", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="0-a-b",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "C, D, E", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="c-d-e",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "F, G, H", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="f-g-h",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "I, J, K", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="i-j-k",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "L, M, N", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="l-m-n",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "O, P, Q", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="o-p-q",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "R, S, T", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="r-s-t",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "U, V, W", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="u-v-w",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},
		{"label": "X, Y, Z", "path": plugin.url_for("omg2_page", action=ACTION_SERIES, query="x-y-z",genre=ACTION_SEARCH, sort=SORT_DATE + SORT_DIRECTION_DESC, page=0)},]

@plugin.route("/omg2/all/<type>/<cat>/<page>/<orderby>/<order>/<format>")
#@ensure_fanart
@ensure_play_path
@library_context
@tvShowSaisonPathExtract
@ensure_color
@tracked
def omg2_listAll(cat, type, page, orderby, order, format):
    from xbmctorrent.utils import url_get
    if cat == NO_CAT:
        url_adr = "%s/scraper/omg/%s/%s/%s/%s" % (SCRAPER_SERVER_URL, type, page, orderby, order)
    else:
    #http://xbmcplugindata.azurewebsites.net/scraper/omg/films/action/1/1/1
        url_adr = "%s/scraper/omg/%s/%s/%s/%s/%s" % (SCRAPER_SERVER_URL, type, cat, page, orderby, order)
    if format != "0":
        url_adr = url_adr + "?formatfilters=" + format
    plugin.log.info('_________________' + url_adr)
    json_data = url_get(url_adr)
    for v in json.loads(json_data):
        yield v
    yield {
        "label": ">> Next page",
        "path": plugin.url_for("omg2_listAll", type = type, cat=cat, page=int(page) + 1, orderby = orderby, order = order,format=format),
        "is_playable": False,
    }

@plugin.route("/omg2/<query>/<page>")
@library_context
@ensure_play_path
@tvShowSaisonPathExtract
@tracked
@ensure_color
def omg2_page(query, page):
    from xbmctorrent.utils import url_get
    url_adr = "%s/scraper/omg/search/%s/%s" % (SCRAPER_SERVER_URL, query, page)
    #plugin.log.info('_________________' + url_adr)
    json_data = url_get(url_adr)
    for v in json.loads(json_data):
        yield v
    yield {
        "label": ">> Next page",
        "path": plugin.url_for("omg2_page", query = query, page=int(page) + 1),
        "is_playable": False,
    }

@plugin.route("/omg2/<serieName>/<serieId>/<saisonCount>")
@library_context
@ensure_play_path
#@ensure_fanart
@tracked
def omg2_saisons(serieName, serieId, saisonCount):
    for s in range(1, int(saisonCount)+1):
        plugin.log.info(plugin.url_for("omg2_episodes", serieName = serieName, serieId = serieId, saisonNumber = s))
        yield {
        "label": "Saison %s" % str(s),
        "path": plugin.url_for("omg2_episodes", serieName = serieName, serieId = serieId, saisonNumber = s),
        "is_playable": False,
    }
    url_adr = "%s/scraper/omg/series/%s/%s/%s" % (SCRAPER_SERVER_URL, serieName, serieId, saisonCount)
@plugin.route("/omg2/saison/<serieName>/<serieId>/<saisonNumber>")
@library_context
@ensure_play_path
#@ensure_fanart
@ensure_color
@tracked
def omg2_episodes(serieName, serieId, saisonNumber):
    from xbmctorrent.utils import url_get
    import urllib
    url_adr = "%s/scraper/omg/series_all/%s/%s/%s" % (SCRAPER_SERVER_URL, urllib.quote(serieName.replace(':','').replace('*','')), serieId, saisonNumber)
    plugin.log.info("url_adr : %s" % url_adr)
    json_data = url_get(url_adr)
    for v in json.loads(json_data):
        yield v

@plugin.route("/omg2/search")
@tracked
def omg2_search():
    query = plugin.request.args_dict.pop("query", None)
    if not query:
        query = plugin.keyboard("", "XBMCtorrent - OmgTorrent - Recherche")
    if query:
        plugin.redirect(plugin.url_for("omg2_page", query=query, page=1))

